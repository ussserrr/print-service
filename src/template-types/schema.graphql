scalar JSON

enum Owner {
  DRIVER
  CAR
}

type TemplateType {
  id: ID!
  owner: Owner!
  title: String!
  active: Boolean!
  pageOfFiles: TemplateFilesPageResult
  currentFile: TemplateFile
}

input CreateTemplateTypeInput {
  owner: Owner!
  title: String!
}

input UpdateTemplateTypeInput {
  title: String
  active: Boolean
  currentFileId: ID
}

input TemplateTypesFilter {
  common: CommonFilter = {}
  active: Boolean
  owners: [Owner!]
}

input TemplateTypesRequestOptions {
  page: PageInput = {}
}

type TemplateTypesPageResult {
  items: [TemplateType!]!
  total: Int!
}

type PrintOutput {
  token: String!
}

type Query {
  templateTypes(
    filter: TemplateTypesFilter = {}
    options: TemplateTypesRequestOptions = {}
  ): TemplateTypesPageResult!
  templateType(id: ID!): TemplateType
  printTemplateType(
    id: ID!
    userId: Int!
    fillData: JSON
  ): PrintOutput
}

type Mutation {
  createTemplateType(data: CreateTemplateTypeInput!): TemplateType!
  updateTemplateType(
    id: ID!
    data: UpdateTemplateTypeInput!
  ): TemplateType!
  removeTemplateType(id: ID!): TemplateType!
}
